DECL
	-- SF refers to the scale factor for rates (as outlined in the paper with number of molecules)
	define MAX_TIME = 2;
	define SF = 1;
	--define N = 2; -- N for hill function kinetics
	define VMaxTP = 0.001;
	define VMaxA = 0.001;
	
	-- two discrete modes with invariants. Invariants defined within trans section.
	boole mode_1;
	boole mode_2;

	--time and delta_time.. delta_time is left undefined in the INIT section and so automatically takes the lowest precision value.
	float [0, MAX_TIME] time;
	float [0, MAX_TIME] delta_time;

	--species
	float [0, VMaxA] A;
	float [0, VMaxTP] TP;

	--derivative
	float [-4, 4] dAdt;

	--rate constants
	float [0, 1] k1;
	float [0, 1] k2;
	float [0, 1] k3;
	float [0, 1] yA;
	float [0, 1] yTP;
	float [0, 1] VA;

	--covariances
	float [0, 4] covA;
	float [0, 4] covTP;

	--threshold
	float [0, 1] c;


	--paramts
	float [0, 1] KMA;
	float [0, 1] KMA2;

INIT
	A = 0;
	TP = 0;
	KMA = 0.1;
	KMA2 = 0.1;
	yA = 0.1;
	yTP = 0.1;

	c = 0.00003;

	covA = 0;
	covTP = 0;

TRANS

	time' = time + delta_time;

	--cant be in two modes at once
	mode_1' + mode_2' = 1;

    --constant rate constraint;
    (k1' = k1) and (k2' = k2) and (k3' = k3);

	--6*(c1c + c5c + c3c + 2*(1-c3c)) + 5*(c2 + c6 + c4 ) <= 60; --cost    

    --Invariants : in mode 1 dAdt is positive while in mode_2 dAdt is approx. 0.

    mode_1  -> (dAdt >= 0);
    mode_1' -> (dAdt >= 0);

    mode_2 -> (dAdt  <=  0.0001);
    mode_2' -> (dAdt <= 0.0001);
    mode_2 -> (dAdt >= 0.0001);
    mode_2' -> (dAdt >= 0.0001);


    mode_1 -> VA = A * VMaxA;
    mode_2 -> VA = A * VMaxA;

	--rates only one can be positive
	(((k1 > 0) and (k2 = 0) and (k3 = 0)) 
	or ((k1 = 0) and (k2 > 0) and (k3 = 0)) 
	or ((k1 = 0) and (k2 = 0) and (k3 > 0)));

	 -- similarly rates cannot change.
	mode_1 -> (d.k1  / d.time = 0);
	mode_1 -> (d.k2  / d.time = 0);
	mode_1 -> (d.k3  / d.time = 0); 

	mode_1 -> (d.yA / d.time = 0);
	mode_1 -> (d.yTP / d.time = 0);
	mode_1 -> (d.KMA2 / d.time = 0);
	mode_1 -> (d.KMA / d.time = 0);


	--ODE flow

	mode_1 -> (d.A / d.time = 0);

	mode_1 -> (d.TP/ d.time = 0);

	mode_1 -> (d.dAdt / d.time = 0);

	mode_2 -> (d.yA / d.time = 0);
	mode_2 -> (d.yTP / d.time = 0);
	mode_2 -> (d.KMA2 / d.time = 0);
	mode_2 -> (d.KMA / d.time = 0);


	mode_2 -> (d.A / d.time = 0);

	mode_2 -> (d.TP/ d.time = 0);

	mode_2 -> (d.dAdt / d.time = 0);



	-- No state change without time consumption.
	(delta_time = 0) -> (A' = A) and (TP' = TP) and (dAdt = dAdt) and (k1' = k1) and (k2' = k2) and (k3' = k3);

  	--Jump Condition where to form the top of the bellshape we have dK_dt at inflection point.

    (mode_1 and mode_2') -> (A > c) and (dAdt < 0.0001);


TARGET
	mode_2 and (time <= MAX_TIME) and (A > c); --costfinal